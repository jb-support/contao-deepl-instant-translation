<?php if (!$this->disabled): ?>
<form method="POST" action="" class="translation-language-switcher">
    <input type="hidden" name="REQUEST_TOKEN" value="<?= $this->requestToken ?>">
    <?php
        switch($this->elementType):
            case 'select':
    ?>
    <select name="lang" id="lang" class="notranslate translation-language-select">
        <?php foreach ($this->languages as $alpha2 => $language): ?>
        <option class="translation-language-option<?= $this->lang == $alpha2 ? ' selected' : '' ?>"
            value="<?= $alpha2 ?>" <?= $this->lang == $alpha2 ? 'selected' : '' ?>><?= $language ?></option>
        <?php endforeach; ?>
    </select>
    <?php break; ?>
    <?php case 'radio': ?>
    <ul class="notranslate translation-language-list">
        <?php foreach ($this->languages as $alpha2 => $language): ?>
        <li class="translation-language-item<?= $this->lang == $alpha2 ? ' active' : '' ?>">
            <label>
                <input type="radio" name="lang" value="<?= $alpha2 ?>"
                    <?= $this->lang == $alpha2 ? 'checked' : '' ?>>
                <?= $language ?>
            </label>
        </li>
        <?php endforeach; ?>
    </ul>
    <?php break; ?>
    <?php case 'buttons': ?>
    <div class="notranslate translation-language-buttons">
        <ul class="translation-language-list">
            <?php foreach ($this->languages as $alpha2 => $language): ?>
            <li class="translation-language-item">
                <button type="submit" name="lang" value="<?= $alpha2 ?>"
                    class="translation-language-button<?= $this->lang == $alpha2 ? ' active' : '' ?>">
                    <?= $language ?>
                </button>
            </li>
            <?php endforeach; ?>
        </ul>
    </div>
    <?php endswitch; ?>
</form>

<div class="translation-spinner-container">
    <div class="translation-spinner"></div>
    <span class="translation-spinner-text">Translating...</span>
</div>

<script>
    const shouldShowModal = JSON.parse('<?= json_encode($this->showModal) ?>');

    document.addEventListener('DOMContentLoaded', function() {
        const selectElement = document.querySelector(
            '.translation-language-select, .translation-language-list'
        );

        const buttons = document.querySelectorAll('.translation-language-button');
        if (buttons) {
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    if (shouldShowModal) {
                        showModal(this.value);
                    }
                });
            });
        }

        selectElement.addEventListener('change', function(e) {
            const form = document.querySelector('.translation-language-switcher');

            if (shouldShowModal) {
                showModal(e.target.value);
            }

            form.submit();
        });
    });

    function showModal(newLang) {
        const translationStrings = JSON.parse('<?= $this->translatingStrings ?>');
        const spinnerText = document.querySelector('.translation-spinner-text');
        spinnerText.textContent = `${translationStrings[newLang]}...`;

        const spinnerContainer = document.querySelector('.translation-spinner-container');
        spinnerContainer.classList.add('active');
    }
</script>

<style>
    .translation-spinner-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        z-index: 100;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, 0);
        opacity: 0;
        pointer-events: none;
        transition: background-color 0.1s ease-in, opacity 0.1s ease-in;
        flex-direction: column;
    }

    .translation-spinner-container.active {
        background-color: rgba(0, 0, 0, 0.3);
        opacity: 1;
        pointer-events: auto;
        transition-delay: 0s;
    }

    .translation-spinner {
        border: 8px solid rgba(255, 255, 255, 0.1);
        border-top: 8px solid #fff;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 1s linear infinite;
    }

    .translation-spinner-text {
        color: #fff;
        font-size: 1.2em;
        margin-top: 10px;
        text-align: center;
    }

    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
<?php endif; ?>
